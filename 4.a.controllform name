ControlledForm.jsx
............
import React, { useState } from 'react';

const ControlledForm = () => {
  const [fullName, setFullName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [errors, setErrors] = useState({});
  const [submittedData, setSubmittedData] = useState(null);

  const validate = () => {
    const newErrors = {};

    if (!fullName.trim()) {
      newErrors.fullName = 'Full Name is required.';
    }

    if (!email.trim()) {
      newErrors.email = 'Email is required.';
    } else if (!email.includes('@') || !email.includes('.')) {
      newErrors.email = 'Email format is invalid.';
    }

    if (!password.trim()) {
      newErrors.password = 'Password is required.';
    }

    return newErrors;
  };

  const handleSubmit = (e) => {
    e.preventDefault(); // Prevent default form submit

    const validationErrors = validate();
    if (Object.keys(validationErrors).length > 0) {
      setErrors(validationErrors);
      setSubmittedData(null);
    } else {
      setErrors({});
      setSubmittedData({ fullName, email, password });
    }
  };

  return (
    <div style={styles.container}>
      <h2>Controlled Form</h2>
      <form onSubmit={handleSubmit} style={styles.form}>
        <div>
          <label>Full Name:</label><br />
          <input
            type="text"
            value={fullName}
            onChange={(e) => setFullName(e.target.value)}
          />
          {errors.fullName && <p style={styles.error}>{errors.fullName}</p>}
        </div>

        <div>
          <label>Email Address:</label><br />
          <input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          {errors.email && <p style={styles.error}>{errors.email}</p>}
        </div>

        <div>
          <label>Password:</label><br />
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          {errors.password && <p style={styles.error}>{errors.password}</p>}
        </div>

        <button type="submit">Submit</button>
      </form>

      {submittedData && (
        <div style={styles.success}>
          <h3>Form Submitted Successfully!</h3>
          <p><strong>Name:</strong> {submittedData.fullName}</p>
          <p><strong>Email:</strong> {submittedData.email}</p>
          <p><strong>Password:</strong> {submittedData.password}</p>
        </div>
      )}
    </div>
  );
};

const styles = {
  container: { maxWidth: '400px', margin: '20px auto', fontFamily: 'Arial' },
  form: { display: 'flex', flexDirection: 'column', gap: '15px' },
  error: { color: 'red', fontSize: '0.9em', marginTop: '5px' },
  success: { marginTop: '20px', padding: '10px', border: '1px solid green', background: '#e0ffe0' }
};

export default ControlledForm;
........................................................................................................................

App.jsx
.........
import React from 'react';
import ControlledForm from './ControlledForm';

const App = () => {
  return (
    <div>
      <ControlledForm />
    </div>
  );
};

export default App;
